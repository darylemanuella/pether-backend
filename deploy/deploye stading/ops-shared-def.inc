<?php
/*
Core operations that are shared by all applications.

fotang, 
Wed 12 Feb 08:31:17 GMT 2020
*/

function sql_string($str){
    /* str: a mysql-escaped string.
     * if string contains comma-separated values,
     * then  modify the string such that each value is an SQL string.
     * E.g. "a,b,c" becomes "''a'',''b'',''c'''" */
    if('NULL' !== $str){
        $res='';
        $str=trim($str,'\'');
        foreach(explode(',',$str) as $v){
            $v=trim($v);
            if($v!=='') $res .= $res===''? "''${v}''":",''${v}''";
        }
        $str=''===$res?'NULL':"'${res}'";
    }
    return $str;
}
function getFileName($junk){
    global $conn;

    $fldname='data';
    return (isset($_FILES[$fldname])
        && $_FILES[$fldname]['error'] === UPLOAD_ERR_OK)?
        mysqlquote($_FILES[$fldname]['name'],$conn,true):'NULL';
}

$shared_ops=[
    
    // meta data: insurer info, logo
    'qoinfo'    =>['ghi_central.get_insurer_info', [WS_ID_FIRST, WS_OPT_MULTI|WS_OPT_EXPBIN],
                [[null,null,null,null,TPAPP],['i']]],
    'qoinfo2'   =>['ghi_central.get_tp_info', [WS_ID_FIRST, WS_OPT_MULTI|WS_OPT_EXPBIN],
                [[null,null,null,null,TPAPP]]],
    'qiset'    =>['ghi_central.get_insurer_setting', [WS_ID_FIRST, WS_OPT_EXPBIN],
                [[null,null,null,null,TPAPP],
                ['key',ParamAttrib::MANDATORY],
                ['i']]],
    'qspset'    =>['ghi_central.get_sp_setting', [WS_ID_FIRST, WS_OPT_EXPBIN],
                [[null,null,null,null,TPAPP],
                ['key',ParamAttrib::MANDATORY],
                ['sp']]],
    'qeset'    =>['ghi_central.get_subscriber_setting', [WS_ID_FIRST, WS_OPT_EXPBIN],
                [[null,null,null,null,TPAPP],
                ['key',ParamAttrib::MANDATORY],
                ['e']]],
    
    'qprin'     =>['ghi_central.getPrincipals',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['e',ParamAttrib::OPTIONAL],
                ['tags',ParamAttrib::OPTIONAL,null,'sql_string'],
                ['startd'],['endd'],['start'],['count']]],
    'qben4prin'=>['ghi_central.get_beneficiaries4principal',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['e'], ['b'],['polno'],['polstat'],['d'],
                ['tags',ParamAttrib::OPTIONAL,null,'sql_string'],
                ['startd'],['endd'],['start'],['count']]],
    'bsearch'  =>['ghi_central.searchMyBeneficiaries',
                [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['extbenid'],['e'], ['b'],['r'],['polno'],['polstat'],
                ['g'],
                ['dob'],
                ['mdob'],
                ['mob'],
                ['yob'],
                ['name'],
                ['tel'],
                ['cc'],
                ['city'],
                ['doc'],
                ['no'],['d'],
                ['tags',ParamAttrib::OPTIONAL,null,'sql_string'],
                ['startd'],
                ['endd'],
                ['start'],
                ['count']]],
    'qsubs'    =>['ghi_central.getSubscribers', [WS_ID_OPT, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['i'],['startd'],['endd'],['start'],['count',ParamAttrib::OPTIONAL,WS_OPT_INOUTPARAM]]],
                
    'db'=>['ghi_central.delBeneficiary', [WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_DELETE],
                [[null,null,null,null,TPAPP],
                ['b',ParamAttrib::MANDATORY,null]]],
    'qb'=>['ghi_central.getBeneficiary', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['b',ParamAttrib::OPTIONAL,null]]],
    'qbf'=>['ghi_central.getBeneficiaryFull', [WS_ID_FIRST, WS_OPT_EXPBIN],
                [[null,null,null,null,TPAPP],
                ['b',ParamAttrib::OPTIONAL,null]]],
    'qbplans'=>['ghi_central.getPackages4Beneficiary', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['b',ParamAttrib::OPTIONAL,null]]],
    'qbphoneusable'=>['ghi_central.client_phones_get_canuse', [WS_ID_FIRST, WS_OPT_NONE],
            [[null,null,null,null,TPAPP],
            ['atype', ParamAttrib::OPTIONAL],
            ['tt',null,null,null, 'B'],
            ['b'], // benid. ignored if called by beneficiary
            ['all']]],
    'qbeaddrusable'=>['ghi_central.client_eaddresses_get_canuse', [WS_ID_FIRST, WS_OPT_MULTI],
            [[null,null,null,null,TPAPP],
            ['atype', ParamAttrib::OPTIONAL],
            ['tt',null,null,null, 'B'],
            ['b'], // benid. ignored if called by beneficiary
            ['all']]],
    'qbaddrusable'=>['ghi_central.client_addresses_get_canuse', [WS_ID_FIRST, WS_OPT_MULTI],
            [[null,null,null,null,TPAPP],
            ['atype', ParamAttrib::OPTIONAL],
            ['tt',null,null,null, 'B'],
            ['b', ParamAttrib::MANDATORY],
            ['all', ParamAttrib::OPTIONAL]]],
            
    'qspsall'   =>['ghi_central.getSPs',
                [WS_ID_FIRST, WS_OPT_MULTI],
                [[null,null,null,null,TPAPP],
                ['cl',ParamAttrib::OPTIONAL],
                ['city',ParamAttrib::OPTIONAL],
                ['cc',ParamAttrib::OPTIONAL],
                ['l1',ParamAttrib::OPTIONAL],
                ['l2',ParamAttrib::OPTIONAL],['aff'],
                ['lat'],['lng'],['offs'],['metric'],[null,null,null,null,false],
                ['start',ParamAttrib::OPTIONAL],
                ['count',ParamAttrib::OPTIONAL]]],
    'qsps'     =>['ghi_central.getSPs', // restrict to SPs that are assigned to the user
                [WS_ID_OPT, WS_OPT_MULTI],
                [[null,null,null,null,TPAPP],
                ['cl',ParamAttrib::OPTIONAL],
                ['city',ParamAttrib::OPTIONAL],
                ['cc',ParamAttrib::OPTIONAL],
                ['l1',ParamAttrib::OPTIONAL],
                ['l2',ParamAttrib::OPTIONAL],['aff'],
                ['lat'],['lng'],['offs'],['metric'],[null,null,null,null,true],
                ['start',ParamAttrib::OPTIONAL],
                ['count',ParamAttrib::OPTIONAL]]],
    'qsp'       =>['ghi_central.getSpDetails',
                [WS_ID_FIRST, WS_OPT_MULTI],
                [[null,null,null,null,TPAPP],
                ['sp',ParamAttrib::MANDATORY]]],
                // package groups
    'qpkggrps'  =>['ghi_central.get_package_groups',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP]]],
    'qpkggrp'  =>['ghi_central.get_package_group',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY]]],
    'qpkgs4grp'  =>['ghi_central.get_group_packages',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY]]],
                //packages
    'qpkgs'  =>['ghi_central.getPackages',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],['deleted']]],
    'qpkg'  =>['ghi_central.getPackage',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],
                ['i',ParamAttrib::OPTIONAL]]],
    'qpkgi'     =>['ghi_central.getPackageDetails',[WS_ID_FIRST, WS_OPT_MULTI],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],
                ['catid'], ['i']]],
    'qplans'=>['ghi_central.getSubscribedPlans',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['e']]],
    'qtgrps'    =>['ghi_central.get_territ_groups',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['i']]],
    'qtgrp'     =>['ghi_central.get_territ_group',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],
                ['i']]],
    'qspcls'    =>['ghi_central.get_sp_classes', [WS_ID_FIRST, WS_OPT_EXPBIN],
                [[null,null,null,null,TPAPP],
                ['c'],
                ['i'],['list']]],
    'qspclsl'    =>['ghi_central.get_sp_classes', [WS_ID_FIRST, WS_OPT_EXPBIN],
                [[null,null,null,null,TPAPP],
                ['c'],
                ['i'],[null,null,null,null,true]]],
    'qspcl'     =>['ghi_central.get_sp_class', [WS_ID_FIRST, WS_OPT_EXPBIN],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],
                ['i']]],
    'qspclt'    =>['ghi_central.get_sp_class_type', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY]],
                null,
                ['db'=>'ghi_central']],
    'qcat'      =>['ghi_central.get_service_category',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],
                ['i']]],
    'qcats'     =>['ghi_central.get_service_categories',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['i'],['active']]],
    'qlimt'     =>['ghi_central.get_limit_types', [WS_ID_NONE, WS_OPT_NONE],[]],
    'qprat'     =>['ghi_central.get_prior_auth_classes',    [WS_ID_NONE, WS_OPT_NONE],[]],
    'qparts'    =>['ghi_central.get_auth_time_types',       [WS_ID_NONE, WS_OPT_NONE],[]],
    'qsvrstr'  =>['ghi_central.get_service_restriction', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],
                ['i']]],
    'qsvrstrs'  =>['ghi_central.get_service_restrictions', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['i']]],
    'qpkgallow'=>['ghi_central.get_package_allowable', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],
                ['i']]],
    'qpkgallows'=>['ghi_central.get_package_allowables', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                 ['pkgid',ParamAttrib::MANDATORY],
                 ['i']]],
    'qpols'=>['ghi_central.get_policies0', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['e',ParamAttrib::OPTIONAL],
                ['status',ParamAttrib::OPTIONAL],['asof'],
                ['expfrom'],['expto']],
                null,
                ['db'=>'ghi_central']],
    'qpolicy'=>['ghi_central.get_policy', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['polno',ParamAttrib::MANDATORY],['asof']]],
    'apolinstb'   =>['ghi_central.policy_renew_beneficiary', [WS_ID_FIRST, WS_OPT_UNION, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],
                ['benid',ParamAttrib::MANDATORY],
                ['renew',null,null,null,true],
                ['failed',null,WS_OPT_OUTPARAM]]],
    'dpolinstb'   =>['ghi_central.policy_renew_beneficiary', [WS_ID_FIRST, WS_OPT_UNION, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],
                ['benid',ParamAttrib::MANDATORY],
                ['renew',null,null,null,false],
                ['failed',null,WS_OPT_OUTPARAM]]],
    'qpolinstb'   =>['ghi_central.policy_get_instance_beneficiaries', [WS_ID_FIRST, WS_OPT_UNION],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],['withname']]],

                // requested policy status
    'rqpolstatus'  =>['propose_policy_status',
                [WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['polno',ParamAttrib::MANDATORY],
                ['status',ParamAttrib::MANDATORY],
                ['rem']]],
    'rqpolcancel'    =>['ghi_central.propose_policy_cancellation',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['polno',ParamAttrib::MANDATORY],
                ['rem']]],
    'rqpoldeact'    =>['ghi_central.propose_policy_deactivation',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['polno',ParamAttrib::MANDATORY],
                ['rem']]],
    'rqpolact'    =>['ghi_central.propose_policy_activation',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['polno',ParamAttrib::MANDATORY],
                ['rem']]],
    'drqpolst'    =>['ghi_central.set_policy_status_req_status',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_DELETE], // reverse request
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],[null,null,null,null,'cancelled'],
                ['rem']]],
    'qrqpolst'    =>['ghi_central.get_proposed_policy_status',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY]]],
    'qrqpolsts'  =>['ghi_central.get_proposed_policy_statuses',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],['polno'],
                [null,null,null,'sql_string','started,held'],
                ['startd'],['endd']]],
    'qrqpolstsa'  =>['ghi_central.get_proposed_policy_statuses',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],['polno'],
                ['status',ParamAttrib::OPTIONAL,null,'sql_string'],
                ['startd'],['endd']]],
                //request statuses (response to request)
    'rqpstatset'    =>['ghi_central.set_policy_status_req_status',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],['status',ParamAttrib::MANDATORY],
                ['rem']]],
    'acpolstat'    =>['ghi_central.set_policy_status_req_status',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],['status',null,null,null,'accepted'],
                ['rem']]],
    'rjpolstat'    =>['ghi_central.set_policy_status_req_status',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],['status',null,null,null,'rejected'],
                ['rem']]],
    'qrqpststs'    =>['ghi_central.get_proposed_policy_status_statuses',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY]]],
    'qrqpststts'    =>['ghi_central.get_policy_status_status_types',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP]]],
                // end of propose a policy status


    'qpolinstbn'   =>['ghi_central.policy_get_instance_beneficiaries', [WS_ID_FIRST, WS_OPT_UNION],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],['withname',null,null,null,true]]],
    'qdisreqs'  =>['ghi_central.get_dispensation_requests',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['sp',ParamAttrib::OPTIONAL],
                ['pos',ParamAttrib::OPTIONAL],
                ['i',ParamAttrib::OPTIONAL],
                ['subs',ParamAttrib::OPTIONAL],
                ['status',ParamAttrib::OPTIONAL],
                ['startd',ParamAttrib::OPTIONAL],
                ['endd',ParamAttrib::OPTIONAL]]],
    'qdisreqsf' =>['ghi_central.get_dispensation_requests_full',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['sp',ParamAttrib::OPTIONAL],
                ['pos',ParamAttrib::OPTIONAL],
                ['i',ParamAttrib::OPTIONAL],
                ['subs',ParamAttrib::OPTIONAL],
                ['status',ParamAttrib::OPTIONAL],
                ['startd',ParamAttrib::OPTIONAL],
                ['endd',ParamAttrib::OPTIONAL]]],
    'qdisreqf'  =>['ghi_central.get_dispensation_request_full',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY]]],
    'qappreqs'  =>['ghi_central.get_approval_requests',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['sp',ParamAttrib::OPTIONAL],
                ['pos',ParamAttrib::OPTIONAL],
                ['i',ParamAttrib::OPTIONAL],
                ['subs',ParamAttrib::OPTIONAL],
                ['status',ParamAttrib::OPTIONAL],
                ['startd',ParamAttrib::OPTIONAL],
                ['endd',ParamAttrib::OPTIONAL]]],

    'qdisreqtot'=>['ghi_central.get_dispensation_request_totals',[WS_ID_FIRST, WS_OPT_MULTI],
                [[null,null,null,null,TPAPP],
                ['sp',ParamAttrib::OPTIONAL],
                ['pos',ParamAttrib::OPTIONAL],
                ['i',ParamAttrib::OPTIONAL],
                ['benid',ParamAttrib::OPTIONAL],
                ['subs',ParamAttrib::OPTIONAL],
                ['startd',ParamAttrib::OPTIONAL],
                ['endd',ParamAttrib::OPTIONAL]]],
    'qdisreqtotd'=>['ghi_central.get_dispensation_request_totals_daily',
                [WS_ID_FIRST, WS_OPT_MULTI],
                [[null,null,null,null,TPAPP],
                ['sp',ParamAttrib::OPTIONAL],
                ['pos',ParamAttrib::OPTIONAL],
                ['i',ParamAttrib::OPTIONAL],
                ['benid',ParamAttrib::OPTIONAL],
                ['subs',ParamAttrib::OPTIONAL],
                ['startd',ParamAttrib::OPTIONAL],
                ['endd',ParamAttrib::OPTIONAL]]],
    'qorelts'=>['ghi_central.get_org_reftypes0', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['orgid'], // value: null
                ['id',null, null, null,'relation']]],
    'saddrgeo'=>['ghi_central.client_address_set_geopoint', [WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
            [[null,null,null,null,TPAPP],
            ['id', ParamAttrib::MANDATORY],
            ['lat', ParamAttrib::MANDATORY],
            ['lng', ParamAttrib::MANDATORY]],
            null,
            ['db'=>'ghi_central']],
    'qaddrgeo'=>['ghi_central.client_address_get_geopoint', [WS_ID_FIRST, WS_OPT_NONE],
            [['id', ParamAttrib::MANDATORY]],
            null,
            ['db'=>'ghi_central']],

    'qcldocls'  =>['ghi_central.get_claim_doc_list',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['claimid',ParamAttrib::MANDATORY]]],
    'qcldocs'  =>['ghi_central.get_claim_docs',[WS_ID_FIRST, WS_OPT_EXPBIN],
                [[null,null,null,null,TPAPP],
                ['claimid',ParamAttrib::MANDATORY]]],
    'qcldoc'  =>['ghi_central.get_claim_doc',[WS_ID_FIRST, WS_OPT_EXPBIN],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY]]],

                /* claim statuses and comments */
     'qclaim'  =>['ghi_central.get_claim_full',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['claimid',ParamAttrib::MANDATORY]]],
    'qclaims'   =>['ghi_central.get_claims_full',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['sp'],
                ['pos'],
                ['i'],
                ['subs'],
                ['batchcode'],['batchid'],['benid'],['source'],
                ['status',ParamAttrib::OPTIONAL,null,'sql_string'],
                ['settled'],
                ['submitted'],[null,null,null,null,true],
                ['startd'],
                ['endd']]],
    'qclaimsp'   =>['ghi_central.get_claims_full1',[WS_ID_FIRST, WS_OPT_NONE], //with pager
                [[null,null,null,null,TPAPP],
                ['sp'],
                ['pos'],
                ['i'],
                ['polno'],
                ['subs'],
                ['batchcode'],['batchid'],['benid'],['source'],
                ['status',ParamAttrib::OPTIONAL,null,'sql_string'],
                ['settled'],
                ['submitted'],[null,null,null,null,true],
                ['startd'],
                ['endd'],
                ['start',ParamAttrib::OPTIONAL],
                ['count',ParamAttrib::OPTIONAL,WS_OPT_INOUTPARAM]]],
    'qclaimsall'   =>['ghi_central.get_claims_full1',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['sp',ParamAttrib::OPTIONAL],
                ['pos',ParamAttrib::OPTIONAL],
                ['i',ParamAttrib::OPTIONAL],
                ['polno'],
                ['subs',ParamAttrib::OPTIONAL],
                ['batchcode'],['batchid'],['benid'],['source'],
                ['status',ParamAttrib::OPTIONAL,null,'sql_string'],
                ['settled',ParamAttrib::OPTIONAL],
                ['submitted'],['restrict'],
                ['startd',ParamAttrib::OPTIONAL],
                ['endd',ParamAttrib::OPTIONAL]]],
    'qclaimsallp'   =>['ghi_central.get_claims_full1',[WS_ID_FIRST, WS_OPT_NONE],  //with pager
                [[null,null,null,null,TPAPP],
                ['sp',ParamAttrib::OPTIONAL],
                ['pos',ParamAttrib::OPTIONAL],
                ['i',ParamAttrib::OPTIONAL],
                ['polno'],
                ['subs',ParamAttrib::OPTIONAL],
                ['batchcode'],['batchid'],['benid'],['source'],
                ['status',ParamAttrib::OPTIONAL,null,'sql_string'],
                ['settled',ParamAttrib::OPTIONAL],
                ['submitted'],['restrict'],
                ['startd',ParamAttrib::OPTIONAL],
                ['endd',ParamAttrib::OPTIONAL],
                ['start',ParamAttrib::OPTIONAL],
                ['count',ParamAttrib::OPTIONAL,WS_OPT_INOUTPARAM]]],
           /*simplified reports */
    'qpolexpiring' =>['get_policies_expiring',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['t',ParamAttrib::MANDATORY]]],
    'qpolexpiringn' =>['get_policies_expiring_count',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['t',ParamAttrib::MANDATORY]]],


        /* tainted claims */
    'qtclaims'=>['ghi_central.get_claim_taints1',[WS_ID_FIRST, WS_OPT_NONE],
            [[null,null,null,null,TPAPP],
            ['claimid'],
            ['startd'],['endd']]],
    'qtclaim'=>['ghi_central.get_claim_taint',[WS_ID_FIRST, WS_OPT_NONE],
            [[null,null,null,null,TPAPP],
            ['id', ParamAttrib::MANDATORY]]],

	        /*operation daryle claim sms */

    'p.claimsms'    =>['ghi_central.pos_claim_sms_sent',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST]],


    'qclaimstt'=>['ghi_central.get_claim_status_types',[WS_ID_NONE, WS_OPT_NONE],
                [[null,null,null,null,TPAPP]]],
    'qclaimstt0'=>['ghi_central.get_claim_status_types',[WS_ID_NONE, WS_OPT_NONE],
                [[null,null,null,null,null]]],
    'qclaimusr'=>['ghi_central.get_claim_user_details', [WS_ID_NONE, WS_OPT_NONE],
            [['realm',ParamAttrib::MANDATORY],
            ['id',ParamAttrib::MANDATORY]]],

    'aclaimst'=>['ghi_central.set_claim_status',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
            [[null,null,null,null,TPAPP],
            ['id', ParamAttrib::MANDATORY],
            ['status', ParamAttrib::MANDATORY],
            ['msg'],
            ['id',null,WS_OPT_OUTPARAM]]],
    'qclaimsth'=>['ghi_central.get_claim_statuses',[WS_ID_FIRST, WS_OPT_NONE],
            [['id', ParamAttrib::MANDATORY]]],
    'qclaimst'=>['ghi_central.get_claim_status',[WS_ID_FIRST, WS_OPT_NONE],
            [['id', ParamAttrib::MANDATORY]]],
    'aclaimmsg'=>['ghi_central.add_claim_comment',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
            [[null,null,null,null,TPAPP],
            ['id', ParamAttrib::MANDATORY],
            [null,null,null,null,null],
            [null,null,null,null,null],
            [null,null,null,null,null],
            [null,null,null,null,null],
            ['msg', ParamAttrib::MANDATORY],
            ['escalate'],
            ['id',null,WS_OPT_OUTPARAM]]],
    'reclaimsg'=>['ghi_central.add_claim_comment',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
            [[null,null,null,null,TPAPP],
            [null,null,null,null,null],
            ['id', ParamAttrib::MANDATORY],
            [null,null,null,null,null],
            [null,null,null,null,null],
            [null,null,null,null,null],
            ['msg', ParamAttrib::MANDATORY],
            ['escalate'],
            ['id',null,WS_OPT_OUTPARAM]]],
    'astatusmsg'=>['ghi_central.add_claim_comment',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
            [[null,null,null,null,TPAPP],
            [null,null,null,null,null],
            [null,null,null,null,null],
            ['id', ParamAttrib::MANDATORY],
            [null,null,null,null,null],
            [null,null,null,null,null],
            ['msg', ParamAttrib::MANDATORY],
            ['escalate'],
            ['id',null,WS_OPT_OUTPARAM]]],
    'abatchmsg'=>['ghi_central.add_claim_comment',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
            [[null,null,null,null,TPAPP],
            [null,null,null,null,null],
            [null,null,null,null,null],
            [null,null,null,null,null],
            ['id', ParamAttrib::MANDATORY],
            [null,null,null,null,null],
            ['msg', ParamAttrib::MANDATORY],
            ['escalate'],
            ['id',null,WS_OPT_OUTPARAM]]],
    'aubatchmsg'=>['ghi_central.add_claim_comment',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
            [[null,null,null,null,TPAPP],
            [null,null,null,null,null],
            [null,null,null,null,null],
            [null,null,null,null,null],
            [null,null,null,null,null],
            ['id', ParamAttrib::MANDATORY],
            ['msg', ParamAttrib::MANDATORY],
            ['escalate'],
            ['id',null,WS_OPT_OUTPARAM]]],
    'qclaimmsgs'=>['ghi_central.get_claim_comments_toplevel',[WS_ID_FIRST, WS_OPT_NONE],
            [['id', ParamAttrib::MANDATORY]]],
    'qstatmsgs'=>['ghi_central.get_status_comments_toplevel',[WS_ID_FIRST, WS_OPT_NONE],
            [['id', ParamAttrib::MANDATORY]]],
    'qbatchmsgs'=>['ghi_central.get_batch_comments_toplevel',[WS_ID_FIRST, WS_OPT_NONE],
            [['id', ParamAttrib::MANDATORY]]],
    'qubatchmsgs'=>['ghi_central.get_user_batch_comments_toplevel',[WS_ID_FIRST, WS_OPT_NONE],
            [['id', ParamAttrib::MANDATORY]]],
    'qclmthread'=>['ghi_central.get_claim_comments_thread',[WS_ID_FIRST, WS_OPT_NONE],
            [['id', ParamAttrib::MANDATORY]]],

    /* messaging */
    // mailboxes
    'ambox'=>['msgutil.email_create_account',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_POST],
            [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY],['d',ParamAttrib::OPTIONAL]]],
    'umbox'=>['msgutil.email_upd_acc',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_PUT],
            [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY],['d',ParamAttrib::OPTIONAL]]],
    'dmbox'=>['msgutil.email_del_acc',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_DELETE],
            [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
    'qmboxes'=>['msgutil.email_get_mboxes',[WS_ID_FIRST,WS_OPT_NONE], [[null,null,null,null,TPAPP]]],
    'qmbox'=>['msgutil.email_get_mbox',[WS_ID_FIRST,WS_OPT_NONE],
            [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
    'smboxstat'=>['msgutil.email_set_ac_status',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_PUT],
            [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY],
            ['status',ParamAttrib::MANDATORY]]],
    'qmbavatar'=>['msgutil.email_get_avatar',[WS_ID_FIRST,WS_OPT_EXPBIN],
             [[null,null,null,null,TPAPP],
             ['address',ParamAttrib::MANDATORY]]],
    'amlist'=>['msgutil.email_create_list',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_POST],
            [[null,null,null,null,TPAPP],
             ['uname',ParamAttrib::MANDATORY],['name',ParamAttrib::MANDATORY],['d']]],
    'dmlist'=>['msgutil.del_mailing_list',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_DELETE],
            [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
    'qmlist'=>['msgutil.get_mailing_list',[WS_ID_FIRST,WS_OPT_NONE],
            [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
    'qmlists'=>['msgutil.get_mailing_lists',[WS_ID_FIRST,WS_OPT_NONE],
            [[null,null,null,null,TPAPP]]],
    'qlistmem'=>['msgutil.get_mailing_list_members',[WS_ID_FIRST,WS_OPT_NONE],
            [[null,null,null,null,TPAPP],
            ['id',ParamAttrib::MANDATORY]]],
    'alistmem'=>['msgutil.add_list_members',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_POST],
            [[null,null,null,null,TPAPP],
            ['id',ParamAttrib::MANDATORY],
            ['m',ParamAttrib::MANDATORY],
            ['failed',null,WS_OPT_OUTPARAM]]],
    'dlistmem'=>['msgutil.rm_list_members',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_DELETE],
            [[null,null,null,null,TPAPP],
            ['id',ParamAttrib::MANDATORY],
            ['m',ParamAttrib::MANDATORY],
            ['failed',null,WS_OPT_OUTPARAM]]],
    // message labels
     'amsgtag'   =>['msgutil.email_create_tag', [WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_POST],
            [[null,null,null,null,TPAPP],
             ['tag',ParamAttrib::MANDATORY]]],
     'dmsgtag'   =>['msgutil.email_del_tag', [WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_DELETE],
            [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'umsgtag'   =>['msgutil.', [WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_PUT],
            [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY],['tag',ParamAttrib::MANDATORY]]],
     'qmsgtag'   =>['msgutil.email_get_tag', [WS_ID_FIRST,WS_OPT_NONE],
            [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'qmsgtags'   =>['msgutil.email_get_tags', [WS_ID_FIRST,WS_OPT_NONE],[[null,null,null,null,TPAPP]]],
     // tag a message
     'tagmsg'   =>['msgutil.email_set_msg_tag',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_PUT],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY],['tagid',ParamAttrib::MANDATORY]]],
     'utagmsg'   =>['msgutil.email_del_msg_tag',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_DELETE],
                [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY],['tagid',ParamAttrib::MANDATORY]]],
    // fetch messages from inbox
    'qinboxnewc'   =>['msgutil.email_get_my_mbox_new_count',[WS_ID_FIRST,WS_OPT_NONE],
              [[null,null,null,null,TPAPP],
              ['start',ParamAttrib::MANDATORY]],
              null,['log'=>false]],
    'qinboxinfo'   =>['msgutil.email_get_my_mbox',[WS_ID_FIRST,WS_OPT_MULTI],
              [[null,null,null,null,TPAPP],
             ['start',ParamAttrib::OPTIONAL],
                ['end',ParamAttrib::OPTIONAL]]],
     'qinboxhdrs' =>['msgutil.email_get_my_inbox_headers',[WS_ID_FIRST,WS_OPT_MULTI],
              [[null,null,null,null,TPAPP],
                ['status',ParamAttrib::OPTIONAL],
                ['state',ParamAttrib::OPTIONAL],
                ['start',ParamAttrib::OPTIONAL],
                ['count',ParamAttrib::OPTIONAL]]],
     'qinboxm'     =>['msgutil.email_get_my_inbox_msg',[WS_ID_FIRST,WS_OPT_MULTI],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'qinboxma'    =>['msgutil.email_get_my_inbox_msg_attachment',[WS_ID_FIRST,WS_OPT_EXPBIN],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'sinboxmr'=>['msgutil.email_msg_mark_read',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_PUT],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'sinboxmur'=>['msgutil.email_msg_mark_unread',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'sinboxmd'=>['msgutil.email_msg_mark_deleted',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_PUT],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'sinboxmud'=>['msgutil.email_msg_mark_undeleted',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_PUT],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'sinboxmar'=>['msgutil.email_msg_mark_archived',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_PUT],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'sinboxumar'=>['msgutil.email_msg_unmark_archived',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_PUT],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'dinboxm'=>['msgutil.email_msg_purge',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_DELETE],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     // send messages
     'sendmsg'=>['msgutil.email_msg_send',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_POST],
            [[null,null,null,null,TPAPP],
             ['subj',ParamAttrib::OPTIONAL],
            ['ref',ParamAttrib::OPTIONAL],
            ['priority',ParamAttrib::OPTIONAL],
            ['text',ParamAttrib::OPTIONAL],
            ['data',ParamAttrib::OPTIONAL],
            ['to',ParamAttrib::OPTIONAL],
            ['cc',ParamAttrib::OPTIONAL],
            ['bcc',ParamAttrib::OPTIONAL],
            ['draft',ParamAttrib::OPTIONAL],
            ['reqrx',ParamAttrib::OPTIONAL],
            ['annex',ParamAttrib::OPTIONAL],
            ['failed',null,WS_OPT_OUTPARAM]]],
     'finamsg'=>['msgutil.email_msg_finalise',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_PUT],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'savedraft'=>['msgutil.email_msg_save_draft',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_PUT],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY],
                ['subj',ParamAttrib::OPTIONAL],
                ['priority',ParamAttrib::OPTIONAL],
                ['text',ParamAttrib::OPTIONAL],
                ['data',ParamAttrib::OPTIONAL],
                ['to',ParamAttrib::OPTIONAL],
                ['cc',ParamAttrib::OPTIONAL],
                ['bcc',ParamAttrib::OPTIONAL],
                ['reqrx',ParamAttrib::OPTIONAL],
                ['failed',null,WS_OPT_OUTPARAM]]],
     'amsgatt'=>['msgutil.email_add_msg_attachment',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_POST]],
     'soutboxmd'=>['msgutil.email_mark_sent_msg_deleted',
                [WS_ID_FIRST,WS_OPT_NONE, WS_METHOD_PUT],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'soutboxmud'=>['msgutil.email_mark_sent_msg_undeleted',
                [WS_ID_FIRST,WS_OPT_NONE, WS_METHOD_PUT],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'doutboxm'=>['msgutil.email_purge_sent_msg',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_DELETE],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'soutboxmar'=>['msgutil.email_archive_sent_msg',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_PUT],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'soutboxumar'=>['msgutil.email_unarchive_sent_msg',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_PUT],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'qoutboxhdrs'=>['msgutil.email_get_my_outbox_headers',[WS_ID_FIRST,WS_OPT_MULTI],
             [[null,null,null,null,TPAPP],
             ['state',ParamAttrib::OPTIONAL],
                    ['drafts',ParamAttrib::OPTIONAL],
                    ['start',ParamAttrib::OPTIONAL],
                    ['count',ParamAttrib::OPTIONAL]]],
     'qoutboxm'=>['msgutil.email_get_my_outbox_msg',[WS_ID_FIRST,WS_OPT_MULTI],
              [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'qoutboxma'=>['msgutil.email_get_my_outbox_msg_attachment',[WS_ID_FIRST,WS_OPT_EXPBIN],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'doutboxma'=>['msgutil.email_del_my_outbox_msg_attachment',
                [WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_DELETE],
             [[null,null,null,null,TPAPP],
             ['id',ParamAttrib::MANDATORY]]],
     'c.aabadr'=>['msgutil.email_add_abook_address',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['address',ParamAttrib::MANDATORY],
                ['name',ParamAttrib::OPTIONAL],
                ['id',null,WS_OPT_OUTPARAM]]],
     'c.qabadrs'=>['msgutil.email_get_abook_addresses',[WS_ID_FIRST,WS_OPT_NONE],
                [[null,null,null,null,TPAPP]]],
     'c.dabadr'=>['msgutil.email_del_abook_address',[WS_ID_FIRST,WS_OPT_NONE,WS_METHOD_DELETE],
                [[null,null,null,null,TPAPP],
                ['address',ParamAttrib::MANDATORY]]],
     'c.babadr'=>['msgutil.email_search_abook',[WS_ID_FIRST,WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['address',ParamAttrib::MANDATORY],
                ['global',ParamAttrib::OPTIONAL]]],


             /* prescription batches */
    'qbclasscats'=>['ghi_central.get_batch_classification_cats',[WS_ID_FIRST, WS_OPT_NONE],
             [[null,null,null,null,TPAPP],
             ['i']]],
    'p.qbadets'  =>['ghi_central.get_batch_details', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['code',ParamAttrib::MANDATORY]]],
                // batch documents
    'p.qdbatchdocs'   =>['pos_get_dispensation_batch_docs',
                [WS_ID_FIRST, WS_OPT_EXPBIN ],
                [[null,null,null,null,TPAPP],['id',ParamAttrib::MANDATORY]]],
    'p.qdbatchdocsl'   =>['pos_list_dispensation_batch_docs',
                [WS_ID_FIRST, WS_OPT_EXPBIN ],
                [[null,null,null,null,TPAPP],['id',ParamAttrib::MANDATORY]]],
    'p.qdbatchdoc'   =>['pos_get_dispensation_batch_doc',
                [WS_ID_FIRST, WS_OPT_EXPBIN ],
                [[null,null,null,null,TPAPP],['id',ParamAttrib::MANDATORY]]],
    'p.qdbatchdocl'   =>['pos_list_dispensation_batch_doc',
                [WS_ID_FIRST, WS_OPT_EXPBIN ],
                [[null,null,null,null,TPAPP],['id',ParamAttrib::MANDATORY]]],

             /* products */
            // product sources
    'qprodsrcso'=>['ghi_central.get_product_sources',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP]],null,['db'=>'ghi_central']],
    'aprodsrc'=>['ghi_central.add_product_source',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['name',ParamAttrib::MANDATORY],
                ['descr',ParamAttrib::MANDATORY],['id',null,WS_OPT_OUTPARAM]],null,['db'=>'ghi_central']],
    'uprodsrc'=>['ghi_central.upd_product_source',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],
                ['name',ParamAttrib::MANDATORY],
                ['descr',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],
    'dprodsrc'=>['ghi_central.del_product_source',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_DELETE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],
    'qprodsrc'=>['ghi_central.get_product_source',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],
                // product categories
    'aprodcat'=>['ghi_central.add_product_category',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['name',ParamAttrib::MANDATORY],
                ['descr',ParamAttrib::MANDATORY],['id',null,WS_OPT_OUTPARAM]]],
    'uprodcat'=>['ghi_central.upd_product_category',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],
                ['name',ParamAttrib::MANDATORY],
                ['descr',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],
    'dprodcat'=>['ghi_central.del_product_category',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_DELETE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],
    'qprodcatso'=>['ghi_central.get_my_prodCats',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP]],null,['db'=>'ghi_central']],
    'qprodcats'=>['ghi_central.get_product_categories',[WS_ID_FIRST, WS_OPT_NONE],
                 [[null,null,null,null,TPAPP],
                 ['i']],null,['db'=>'ghi_central']],
    'qprodcat'=>['ghi_central.get_product_category',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],
            // products
    'aproduct'=>['ghi_central.add_product',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['source',ParamAttrib::MANDATORY],
                ['srcprod'],['catid',ParamAttrib::MANDATORY],
                ['name',ParamAttrib::MANDATORY],
                ['descr'],['id',null,WS_OPT_OUTPARAM]],null,['db'=>'ghi_central']],
    'uproduct'=>['ghi_central.upd_product',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],
                ['source',ParamAttrib::MANDATORY],
                ['srcprod'],['catid',ParamAttrib::MANDATORY],
                ['name',ParamAttrib::MANDATORY],
                ['descr']],null,['db'=>'ghi_central']],
    'actproduct'=>['ghi_central.active_product',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],[null,null,null,null,true]],null,['db'=>'ghi_central']],
    'dactproduct'=>['ghi_central.active_product',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],[null,null,null,null,false]],null,['db'=>'ghi_central']],
    'dproduct'=>['ghi_central.del_product',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_DELETE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],
    'qproduct'=>['ghi_central.get_product',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],
            // product search
    'prodsearch'  =>['ghi_central.search_products',[WS_ID_FIRST, WS_OPT_NONE],
             [[null,null,null,null,TPAPP],
            ['n',ParamAttrib::MANDATORY],['cat'],['catid'],
            ['i'],[null,null,null,null,null],[null,null,null,null,null],
            [null,null,null,null,null],
            ['start'], ['count',ParamAttrib::OPTIONAL,WS_OPT_INOUTPARAM]],null,['db'=>'ghi_central']],
    'qprodsb'=>['ghi_central.search_products',[WS_ID_FIRST, WS_OPT_NONE],
            [[null,null,null,null,TPAPP],
            ['n'],
            ['cat'],
            [null,null,null,null,null],
            ['i'],
            [null,null,null,null,null],
            [null,null,null,null,null],
            [null,null,null,null,null],
            ['start'], ['count',ParamAttrib::OPTIONAL,WS_OPT_INOUTPARAM]],null,['db'=>'ghi_central']],
    'prodsearchw'  =>['ghi_central.search_products',[WS_ID_FIRST, WS_OPT_NONE],
             [[null,null,null,null,TPAPP],
            ['n',ParamAttrib::MANDATORY],['cat'],['catid'],
            [null,null,null,null,null],
            ['pkgid',ParamAttrib::MANDATORY],[null,null,null,null,'P'],
            [null,null,null,null,null],
            ['start'], ['count',ParamAttrib::OPTIONAL,WS_OPT_INOUTPARAM]],null,['db'=>'ghi_central']],
    'prodsearchwd'  =>['ghi_central.search_products',[WS_ID_FIRST, WS_OPT_NONE],
             [[null,null,null,null,TPAPP],
            ['n',ParamAttrib::MANDATORY],['cat'],[null,null,null,null,null],
            [null,null,null,null,null],
            ['pkgid',ParamAttrib::MANDATORY],[null,null,null,null,'D'],
            ['sp'],
            ['start'], ['count',ParamAttrib::OPTIONAL,WS_OPT_INOUTPARAM]],null,['db'=>'ghi_central']],

    'ab'=>['ghi_central.addBeneficiary',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
             [[null,null,null,null,TPAPP],
                ['benid'],
                ['e'],
                ['p'],
                ['r'],
                ['sn',ParamAttrib::MANDATORY],
                ['ln'],
                ['mn'],
                ['md'],
                ['g',ParamAttrib::MANDATORY],
                ['dob',ParamAttrib::MANDATORY],
                ['hon'],
                ['tel'],
                ['email'],
                ['rem'],
                ['bg'],
                ['ms'],
                ['occ'],
                ['po'],
                ['pkg'],
                ['start'],
                ['n'],
                ['nu'],
                ['lid'],
                ['batch']]],
    'ab0'   =>['ghi_central.addBeneficiary0', [WS_ID_FIRST, WS_OPT_UNION, WS_METHOD_POST],
             [[null,null,null,null,TPAPP],
                ['en',ParamAttrib::MANDATORY],
                ['benid'],
                ['e',ParamAttrib::MANDATORY],
                ['p'],
                ['r'],
                ['rem'],
                ['po'],
                ['pkg'],
                ['start'],
                ['n'],
                ['nu'],
                ['lid'],
                ['batch'],
                ['id',null,WS_OPT_OUTPARAM]]],
    'sbenpol'   =>['ghi_central.set_beneficiary_policy', [WS_ID_FIRST, WS_OPT_UNION, WS_METHOD_POST],
             [[null,null,null,null,TPAPP],
                ['b',ParamAttrib::MANDATORY],
                ['po',ParamAttrib::MANDATORY],
                ['start'],
                ['rem']]],
    'aregdoc'=>['ghi_central.add_ben_registration_doc',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['b',ParamAttrib::MANDATORY],
                ['data',ParamAttrib::FILE_MANDATORY],
                [null,null,null,'getFileName'],
                ['d'],
                ['id',null,WS_OPT_OUTPARAM]]],
    'uregdoc'=>['ghi_central.upd_ben_registration_doc',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],
                ['d']]],
    'dregdoc'=>['ghi_central.del_ben_registration_doc',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_DELETE],
                 [[null,null,null,null,TPAPP],
                 ['id',ParamAttrib::MANDATORY]]],
    'qregdoc'=>['ghi_central.get_ben_registration_doc',[WS_ID_FIRST, WS_OPT_EXPBIN, WS_METHOD_GET],
                 [[null,null,null,null,TPAPP],
                 ['id',ParamAttrib::MANDATORY]]],
    'qregdocs'=>['ghi_central.get_ben_registration_docs',[WS_ID_FIRST, WS_OPT_EXPBIN, WS_METHOD_GET],
                 [[null,null,null,null,TPAPP],
                 ['b',ParamAttrib::MANDATORY]]],
                 

    'qcstatets'  =>['ghi_central.getclaimStatetypes',[WS_ID_NONE, WS_OPT_NONE],
                [[null,null,null,null,TPAPP]]],
    'qcstatets0'  =>['ghi_central.getclaimStatetypes',[WS_ID_NONE, WS_OPT_NONE],
                [[null,null,null,null,null]]],
    'qastatets' =>['ghi_central.get_approval_status_types',[WS_ID_NONE, WS_OPT_NONE],
                [[null,null,null,null,TPAPP]]],
    'qastatets0' =>['ghi_central.get_approval_status_types',[WS_ID_NONE, WS_OPT_NONE],
                [[null,null,null,null,null]]],

    'qspclfy'   =>['ghi_central.get_sp_classifications', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['sp'],
                ['cl']]],
    'qspclfys'  =>['ghi_central.get_sp_classifications', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['i'],['sp'], ['cl'],['withsp'],['uniqcl']]],
    // classify POS. caller: Insurer, SP
    'posclfy'    =>['ghi_central.pos_classify', [WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['pos',ParamAttrib::MANDATORY],
                ['cl',ParamAttrib::MANDATORY], ['d']]],
    'posclfym'   =>['ghi_central.pos_classify_multiple',
                [WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['pos',ParamAttrib::MANDATORY],
                ['cl',ParamAttrib::MANDATORY],
                ['d',ParamAttrib::OPTIONAL],
                ['s',ParamAttrib::OPTIONAL],
                ['failed',null,WS_OPT_OUTPARAM]]],
    'posuclfy'   =>['ghi_central.pos_upd_classification',
                [WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
                ['pos',ParamAttrib::MANDATORY],
                ['cl',ParamAttrib::MANDATORY], ['d']]],
    'posdclfy'   =>['ghi_central.pos_unclassify', [WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_DELETE],
                [[null,null,null,null,TPAPP],
                ['pos',ParamAttrib::MANDATORY],
                ['cl',ParamAttrib::MANDATORY]]],
    'qposclfy'   =>['ghi_central.get_pos_classifications', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['pos',ParamAttrib::MANDATORY],
                ['cl',ParamAttrib::MANDATORY]]],
    'qposclfys'  =>['ghi_central.get_pos_classifications', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['pos'],
                ['cl']]],

                // add POS
    'sp.apos'      =>['sp.add_pos',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['sp'],['code',ParamAttrib::MANDATORY],
                ['name',ParamAttrib::MANDATORY],
                ['city'],['rem'],['status']],null,['db'=>'ghi_central']],
    'sp.upos'      =>['sp.upd_pos',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
                ['sp'],['code',ParamAttrib::MANDATORY],
                ['name',ParamAttrib::MANDATORY],
                ['city'],['rem']],null,['db'=>'ghi_central']],
    'sp.dpos'      =>['sp.del_pos',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_DELETE],
                [[null,null,null,null,TPAPP],
                ['code',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],
    'sp.posact'   =>['sp.activate_pos',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
                ['code',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],
    'sp.posdact'  =>['sp.deactivate_pos',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
                ['code',ParamAttrib::MANDATORY]]],
    'sp.qpos'     =>['sp.get_pos',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['code',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],
    'sp.qposs'    =>['sp.get_poss',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['code',ParamAttrib::MANDATORY],
                ['start'], ['count',ParamAttrib::OPTIONAL,WS_OPT_INOUTPARAM]],null,['db'=>'ghi_central']],
                // pos user
    'sp.apusr'  =>['sp.add_pos_user',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['code',ParamAttrib::MANDATORY],
                ['pw',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],
    'sp.dpusr'  =>['sp.del_pos_user',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_DELETE],
                [[null,null,null,null,TPAPP],
                ['code',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],
    'sp.qpusr'  =>['sp.get_pos_user',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['code',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],
    'sp.qpusrs' =>['sp.get_pos_users',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['code'],
                ['start'], ['count',ParamAttrib::OPTIONAL,WS_OPT_INOUTPARAM]],null,['db'=>'ghi_central']],
    'sp.pusrpass'=>['sp.chpass_pos_user',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
                ['code',ParamAttrib::MANDATORY],
                ['pw',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],
    'sp.pusract' =>['sp.enable_pos_user',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
                ['code',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],
    'sp.pusrdact'=>['sp.disable_pos_user',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
                ['code',ParamAttrib::MANDATORY]],null,['db'=>'ghi_central']],

                /* capitation */
    'qcapgstatts' =>['ghi_central.get_capitation_group_status_types', [WS_ID_FIRST, WS_OPT_NONE],[]],
    'qcapmstatts' =>['ghi_central.get_capitation_member_status_types', [WS_ID_FIRST, WS_OPT_NONE],[]],
    'acapgrspcg'  =>['ghi_central.add_capitation_sp_class',
                    [WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                    ['g',ParamAttrib::MANDATORY],
                    ['spcg',ParamAttrib::MANDATORY],
                    ['d'],
                    ['id',null,WS_OPT_OUTPARAM]]],
    'ucapgrspcg'  =>['ghi_central.upd_capitation_sp_class',
                    [WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
                    ['id',ParamAttrib::MANDATORY],
                    ['g',ParamAttrib::MANDATORY],
                    ['spcg',ParamAttrib::MANDATORY],
                    ['d']]],
    'dcapgrspcg'  =>['ghi_central.del_capitation_sp_class',
                    [WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_DELETE],
                [[null,null,null,null,TPAPP],
                    ['id',ParamAttrib::MANDATORY]]],
    'qcapgrspcgs'  =>['ghi_central.get_capitation_sp_classes', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                    ['g']]],
    'acapgrsp'  =>['ghi_central.add_capitation_sp',
                    [WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                    ['g',ParamAttrib::MANDATORY],
                    ['sp',ParamAttrib::MANDATORY],
                    ['d'],
                    ['id',null,WS_OPT_OUTPARAM]]],
    'ucapgrsp'  =>['ghi_central.upd_capitation_sp',
                    [WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
                    ['id',ParamAttrib::MANDATORY],
                    ['g',ParamAttrib::MANDATORY],
                    ['sp',ParamAttrib::MANDATORY],
                    ['d']]],
    'dcapgrsp'  =>['ghi_central.del_capitation_sp',
                    [WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_DELETE],
                [[null,null,null,null,TPAPP],
                    ['id',ParamAttrib::MANDATORY]]],
    'qcapgrsps'  =>['ghi_central.get_capitation_sps', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                    ['g']]],
                // beneficiary sp
    'acapbsp'  =>['ghi_central.add_capitation_member_sp',
                    [WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                    ['benid',ParamAttrib::MANDATORY],
                    ['sp',ParamAttrib::MANDATORY],
                    ['priority'],
                    ['d'],
                    ['id',null,WS_OPT_OUTPARAM]]],
    'ucapbsp'  =>['ghi_central.upd_capitation_member_sp',
                    [WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_PUT],
                [[null,null,null,null,TPAPP],
                    ['id',ParamAttrib::MANDATORY],
                    ['benid',ParamAttrib::MANDATORY],
                    ['sp',ParamAttrib::MANDATORY],
                    ['priority'],
                    ['d']]],
    'dcapbsp'  =>['ghi_central.del_capitation_member_sp',
                    [WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_DELETE],
                [[null,null,null,null,TPAPP],
                    ['id',ParamAttrib::MANDATORY]]],
    'qcapbsps'  =>['ghi_central.get_capitation_member_sps', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                    ['benid']]],

                    /* BENEFICIARY QUESTIONNAIRES */
    'qresptypes'=>['ghi_central.getanswer_types',[WS_ID_NONE, WS_OPT_NONE],[]],
                // sections
    'qqsects'   =>['ghi_central.getquestion_sections',[WS_ID_FIRST, WS_OPT_NONE],[[null,null,null,null,TPAPP]]],
    'qqsect'    =>['ghi_central.getquestion_section',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],['id',ParamAttrib::MANDATORY]]],
    'qqsectr'   =>['ghi_central.getquestion_section_recursive',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],
                ['r']]],
    'qqstexts'  =>['ghi_central.get_questionnaire_section_texts', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['lang']]],
    'qqstext'   =>['ghi_central.get_questionnaire_section_text', [WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],['lang']]],
                // questions
    'qqbysect'  =>['ghi_central.getquestionsBySection',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],['id',ParamAttrib::MANDATORY]]],
    'qquests'   =>['ghi_central.getquestions',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP]]],
    'qquest'    =>['ghi_central.getquestion',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],['id',ParamAttrib::MANDATORY]]],
    'qqtext'    =>['ghi_central.getquestion_text',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['id',ParamAttrib::MANDATORY],['lang']]],
    'qqtexts'   =>['ghi_central.getquestion_texts',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['lang']]],
                // questionnaire responses
    'quesresp'=>['ghi_central.addQuestionResponse',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_POST],
                [[null,null,null,null,TPAPP],
                ['b',ParamAttrib::MANDATORY],
                ['qid',ParamAttrib::MANDATORY],
                ['ans',ParamAttrib::MANDATORY]]],
    'delqresp'=>['ghi_central.delQuestionResponse',[WS_ID_FIRST, WS_OPT_NONE, WS_METHOD_DELETE],
                [[null,null,null,null,TPAPP],['qid',ParamAttrib::MANDATORY]]],
    'qresp'=>['ghi_central.getresponse',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['b',ParamAttrib::MANDATORY],
                ['qid',ParamAttrib::MANDATORY]]],
    'qrespbyben'=>['ghi_central.getresponses4ben',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP],
                ['b',ParamAttrib::MANDATORY]]],
                /* schedule data */
    'qbbprops'  =>['ghi_central.get_bb_current_assets', [WS_ID_FIRST, WS_OPT_EXPBIN],
                [[null,null,null,null,TPAPP],
                ['i']]],
    'qbbprop'=>['ghi_central.get_bb_current_asset',[WS_ID_FIRST, WS_OPT_EXPBIN],
                [[null,null,null,null,TPAPP],
                ['i'],
                ['id',ParamAttrib::MANDATORY]]],

    'qucreasonts'  =>['get_user_claim_reasons',[WS_ID_FIRST, WS_OPT_NONE],
                [[null,null,null,null,TPAPP]]],

                /* organisation contacts */
    'qcontplfs2'=>['get_contact_platforms2',[WS_ID_FIRST, WS_OPT_NONE],[[null,null,null,null,TPAPP]]],
    'qgcontactsx'=>['ghi_central.get_contact_group_contacts',[WS_ID_FIRST, WS_OPT_NONE],// by id
                [[null,null,null,null,TPAPP],['i'],
                ['id',ParamAttrib::MANDATORY],
                [null,null,null,null,null]]],
     'qgcontactsnx'=>['ghi_central.get_contact_group_contactsEx',[WS_ID_FIRST, WS_OPT_NONE],// by group name
                [[null,null,null,null,TPAPP],['i'],
                [null,null,null,null,null],
                ['name',ParamAttrib::MANDATORY]]],


    'gui.qprodwids'=>['ghi_central.get_prodcat_filter_widgets',[WS_ID_NONE, WS_OPT_NONE],[]],
    'qui.qdiaglocs'=>['ghi_central.get_diagnosis_locations',[WS_ID_NONE, WS_OPT_NONE],[]],
    'gui.srlayout'=>['ghi_central.get_service_request_filter_widgets',[WS_ID_NONE, WS_OPT_NONE],[]]

            ];           

$shared_op_aliases=['qpropstats'=>'qrqpolsts'];

